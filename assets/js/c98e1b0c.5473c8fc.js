"use strict";(self.webpackChunk_minimajs_docs=self.webpackChunk_minimajs_docs||[]).push([[664],{7071:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=r(86),i=r(6491);const s={title:"Middleware",sidebar_position:7,tags:["middleware","interceptor","module"]},a=void 0,o={id:"Guide/middleware",title:"Middleware",description:"How could a framework exist without middleware? It's a fundamental component, enabling modular and reusable code for request handling.",source:"@site/docs/Guide/middleware.md",sourceDirName:"Guide",slug:"/Guide/middleware",permalink:"/Guide/middleware",draft:!1,unlisted:!1,tags:[{label:"middleware",permalink:"/tags/middleware"},{label:"interceptor",permalink:"/tags/interceptor"},{label:"module",permalink:"/tags/module"}],version:"current",sidebarPosition:7,frontMatter:{title:"Middleware",sidebar_position:7,tags:["middleware","interceptor","module"]},sidebar:"defaultSidebar",previous:{title:"Module",permalink:"/Guide/module"},next:{title:"Context",permalink:"/Guide/context"}},d={},l=[];function c(e){const t={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"How could a framework exist without middleware? It's a fundamental component, enabling modular and reusable code for request handling."}),"\n",(0,n.jsx)(t.p,{children:"Let's start by creating a middleware:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'title="src/payments/middleware.ts"',children:'import { getRequest } from "@minimajs/server";\n\nexport async function loggerMiddleware() {\n  const req = getRequest();\n  console.log(req.url);\n}\n'})}),"\n",(0,n.jsx)(t.p,{children:"In this example, we've created a simple logger middleware that logs the URL of incoming requests."}),"\n",(0,n.jsx)(t.p,{children:"Next, let's integrate this middleware into our application:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'title="src/index.ts"',children:'import { interceptor } from "@minimajs/server";\nimport { loggerMiddleware } from "./payments/middleware";\n\n// Register the loggerMiddleware with an interceptor\napp.register(interceptor([loggerMiddleware], paymentModule), {\n  prefix: "/payments",\n});\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Here, we've used the ",(0,n.jsx)(t.code,{children:"interceptor"})," function to wrap our ",(0,n.jsx)(t.code,{children:"paymentModule"})," with the ",(0,n.jsx)(t.code,{children:"loggerMiddleware"}),", ensuring that all requests to the ",(0,n.jsx)(t.code,{children:"/payments"})," endpoint are logged."]}),"\n",(0,n.jsxs)(t.p,{children:["But what if you want to leverage existing Express middleware? Not a problem! ",(0,n.jsx)(t.code,{children:"interceptor"})," is fully compatible with Express middleware:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",metastring:'title="src/index.ts"',children:'import { yourExpressMiddleware } from "middleware/factory";\n\n// Integrate your Express middleware with the interceptor\napp.register(interceptor([yourExpressMiddleware], paymentModule), {\n  prefix: "/payments",\n});\n'})}),"\n",(0,n.jsxs)(t.p,{children:["With ",(0,n.jsx)(t.code,{children:"interceptor"}),", you can seamlessly use Express middleware within your minimajs application, making it easy to transition existing codebases or leverage a rich ecosystem of middleware libraries."]})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},6491:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>o});var n=r(1654);const i={},s=n.createContext(i);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);